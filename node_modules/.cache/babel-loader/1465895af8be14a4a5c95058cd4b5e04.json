{"ast":null,"code":"var _jsxFileName = \"/Users/raheel-devnation/Downloads/react-optimization-batch-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport Button from './components/UI/Button/Button';\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n\n  const allowToggleHandler = () => {\n    setAllowToggle(true);\n  };\n\n  console.log('App Running'); // const toggleParagraph = () => {\n  //   setShowParagraph(preShowParagraph => !preShowParagraph)\n  // }\n\n  const toggleParagraph = useCallback(() => {\n    setShowParagraph(preShowParagraph => !preShowParagraph);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi there!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), showParagraph && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a paragraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      onShow: showParagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraph,\n      children: \"Toggle Paragraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oMmVbNCu6cYtseCjmSJn6SxLyIg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/raheel-devnation/Downloads/react-optimization-batch-1/src/App.js"],"names":["React","useState","useCallback","Button","DemoOutput","App","showParagraph","setShowParagraph","allowToggle","setAllowToggle","allowToggleHandler","console","log","toggleParagraph","preShowParagraph"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMS,kBAAkB,GAAG,MAAM;AAC/BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EATa,CAWb;AACA;AACA;;AAEA,QAAMC,eAAe,GAAGX,WAAW,CAAC,MAAM;AACxCK,IAAAA,gBAAgB,CAACO,gBAAgB,IAAI,CAACA,gBAAtB,CAAhB;AACD,GAFkC,EAEhC,EAFgC,CAAnC;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,aAAa,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpB,eAGE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEO,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEH,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA9BQL,G;;KAAAA,G;AAgCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport Button from './components/UI/Button/Button'\nimport './App.css';\nimport DemoOutput from './components/Demo/DemoOutput';\n\nfunction App() {\n\n  const [showParagraph, setShowParagraph] = useState(false)\n  const [allowToggle, setAllowToggle] = useState(false)\n  \n  const allowToggleHandler = () => {\n    setAllowToggle(true)\n  }\n  \n  console.log('App Running')\n\n  // const toggleParagraph = () => {\n  //   setShowParagraph(preShowParagraph => !preShowParagraph)\n  // }\n\n  const toggleParagraph = useCallback(() => {\n    setShowParagraph(preShowParagraph => !preShowParagraph)\n  }, [])\n\n  \n\n  return (\n    <div className=\"app\">\n      <h1>Hi there!</h1>\n      {showParagraph && <p>This is a paragraph</p>}\n      <DemoOutput onShow={showParagraph} />\n      <Button onClick={toggleParagraph}>Toggle Paragraph</Button>\n      <Button onClick={allowToggleHandler}>Allow Toggle</Button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}